@use '../utils/bem.scss' as * with (
  $block: link
);
@use '../common/var' as *;

// link state mixin
@mixin linkState($state) {
  &:#{$state} {
    @content;
  }
}
@mixin linkFocus() {
  @include linkState('focus') {
    @content;
  }
}
@mixin linkHover() {
  @include e(inner) {
    &:hover {
      @content;
    }
  }
}
@mixin linkActive() {
  @include e(inner) {
    &:active {
      @content;
    }
  }
}

@include b() {
  position: relative;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  vertical-align: middle;
  outline: none;
  border-radius: getBorderRadius('small');
  font-size: getFontSize();
  font-weight: normal;
  transition: all getTransition();
  box-sizing: border-box;
  text-align: center;
  white-space: nowrap;
  cursor: pointer;
  @include linkHover() {
    background-color: getFillColor('dark');
  }
  @include linkActive() {
    background-color: getFillColor('light');
  }
  @include e(inner) {
    transition: inherit;
    border-radius: inherit;
    padding: 5px 8px;
  }
}

// link theme mixin
@mixin linkTheme($theme) {
  @include m($theme) {
    color: getColor($theme);
    @include linkHover() {
      background-color: getColorWithLevel($theme, 5);
      color: getFillColor();
    }
    @include linkActive() {
      background-color: getColorWithLevel($theme, 6);
      color: getTextColor();
    }
  }
}
@include linkTheme(primary);
@include linkTheme(success);
@include linkTheme(warning);
@include linkTheme(danger);

// link disabled state
@include is(disabled) {
  cursor: not-allowed;
  @include e(inner) {
    pointer-events: none;
  }
}
